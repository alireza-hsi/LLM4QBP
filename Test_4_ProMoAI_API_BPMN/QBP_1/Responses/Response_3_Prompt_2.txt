First Iteration:

from utils.model_generation import ModelGenerator

gen = ModelGenerator()

# Module 1: Early Assessment
# 1.1 Initial Evaluation
initial_evaluation = gen.activity('Rapid initial evaluation for airway, breathing, and circulation')

# 1.2 Initial Examinations
neurological_exam = gen.activity('Neurological examination (NIHSS or CNS)')
brain_imaging = gen.activity('Brain imaging (CT or MRI) immediately')
brain_imaging_interpretation = gen.activity('Immediate interpretation of brain imaging by expert')
ecg_test = gen.activity('ECG to detect atrial fibrillation and arrhythmias')
chest_xray = gen.activity('Chest x-ray should not delay thrombolysis assessment')
blood_tests = gen.activity('Blood work: CBC, electrolytes, creatinine, glucose, INR, PTT, troponin (if indicated)')

initial_examinations = gen.partial_order(dependencies=[
    (neurological_exam,),
    (brain_imaging, brain_imaging_interpretation),
    (ecg_test,),
    (chest_xray,),
    (blood_tests,)
])

# 1.3 Assessment and Early Management of Dysphagia
npo_status = gen.activity('Make patient NPO and conduct swallowing screen')
monitoring_alertness = gen.activity('Monitor non-alert patients for swallowing assessment')
specialist_assessment = gen.activity('Full clinical assessment by speech-language pathologist if dysphagia suspected')

dysphagia_management = gen.partial_order(dependencies=[
    (npo_status,),
    (monitoring_alertness,),
    (specialist_assessment,)
])

# 1.4 Cross-Continuum Prevention Assessment and Therapies
secondary_prevention = gen.activity('Initiate cross-continuum secondary prevention assessments and therapies')

# 1.5 Triage Tool for Patients with TIA
triage_tool = gen.activity('Use standardized triage tool to determine appropriate care location')

# 1.6 Initial Examinations for TIA or Minor Stroke
vascular_imaging_immediate = gen.activity(
    'Immediate vascular imaging (carotid ultrasound, CTA, or MRA) for TIA/minor stroke within 48 hours'
)
vascular_imaging_asap = gen.activity(
    'Vascular imaging of brain and neck arteries ASAP for patients presenting beyond 48 hours'
)

vascular_imaging = gen.xor(vascular_imaging_immediate, vascular_imaging_asap)

# Combining all early assessment steps
early_assessment = gen.partial_order(dependencies=[
    (initial_evaluation, initial_examinations),
    (initial_examinations, dysphagia_management),
    (dysphagia_management, secondary_prevention),
    (secondary_prevention, triage_tool),
    (triage_tool, vascular_imaging)
])

# Full model including optional execution (can be skipped)
final_model = gen.xor(early_assessment, None)





########################################################################################################################

Second Iteration's Message: 



Second Iteration Response (Only the code part):

